      SUBROUTINE LOPEN(IUN,NB,NBDIM,LBSIZE,LRSIZE,MODE,NRW,IST)
      DIMENSION NB(1)
C
C ROUTINES FOR READING/WRITING  FIXED-BLOCKED RECORDS
C ENTRY POINTS
C     LOPEN     SETS UP ACCESS TO A LOGICAL UNIT
C     LREAD     READS THE NEXT SEQUENTIAL LOGICAL RECORD
C     LWRITE    WRITES A LOGICAL RECORD
C     LCLOSE    REMOVES A LOGICAL UNIT CONNECTION
C
C LOPEN
C
C     INPUT ARGUMENTS
C       IUN     THE FORTRAN UNIT TO ACCESS.
C       NB      WORKING BUFFER WHICH MUST BE DIMENSIONED LARGE
C               ENOUGH TO CONTAIN 'LBSIZE' BITS PLUS 10 WORDS.
C       NBDIM   DIMENSION OF NB.
C       LBSIZE  DESIRED(OR EXPECTED) BLOCK SIZE IN BITS.
C       LRSIZE  DESIRED(OR EXPECTED) LOGICAL RECORD LENGTH IN BITS.
C       MODE    MEANINGLESS EXCEPT WHERE ACTUAL VOLUME READ CAN DO
C               CHARACTER CONVERSIONS OR PARITY MUST BE SPECIFIED.
C               MODE=0 ON IBM IS ASCII TO EBCDIC
C       NRW     READ/WRITE FLAG WHERE 1=READ, 2=WRITE.
C     OUTPUT ARGUMENTS
C       IST     STATUS OF OPEN WHERE 0 IS OK AND 2 IS AN ERROR.
C
C LREAD  / LWRITE
C
C     INPUT ARGUMENTS
C       NB      BUFFER CORRESPONDING TO LOPEN CALL
C       IB      LOGICAL RECORD BUFFER (WRITE)
C
C     OUTPUT ARGUMENTS
C       IB      LOGICAL RECORD BUFFER (READ)
C       IST     STATUS RETURN 0 =OK , 1=EOF, 2=ERROR, 3=EOD.
C
C LCLOSE
C
C     INPUT ARGUMENTS
C       NB      BUFFER CORRESPONDING TO LOPEN CALL.
C
C     OUTPUT ARGUEMENTS
C       IST     STATUS AS IN LOPEN.
C
C  NB BUFFER USAGE
C     THE FIRST 10 WORDS OF NB ARE USED FOR BOOKKEEPING INFORMATION
C     WHICH IS DERIVED FROM INFO IN LOPEN CALL OR COUNTER INFO
C     NECESSARY TO KEEP TRACK OF WHAT HAS BEEN USED IN CURRENT BLOCK.
C     WORDS 11 THRU NBDIM ARE USED FOR UNBLOCKING (BLOCKING) THE
C     LOGICAL RECORDS.
C
C       WORD    USAGE
C         1     FORTRAN UNIT NUMBER
C         2     DIMENSION OF NB
C         3     SIZE OF BLOCK (BITS)
C         4     SIZE OF LOGICAL RECORD (BITS)
C         5     READ/WRITE MODE
C         6     NUMBER OF BITS AVAILABLE IN BLOCK
C         7     NUMBER OF BITS USED IN CURRENT BLOCK
C         8     BLOCK COUNT SINCE LAST LOPEN CALL
C         9     READ/WRITE FLAG WHERE 1=OPEN FOR READ, 2=OPEN FOR WRITE
C        10     WHOLE WORDS NECESSARY TO CONTAIN ONE LOGICAL RECORD
C
C
C MACHINE DEPENDENT CONSTANTS
C DEFINE UNIT SIZE FOR WRITE(IWU) AND READ(IRU) IN BITS AND MACHINE
C     WORD SIZE IN BITS.
C
      PARAMETER(IWU=64,IRU=64,IWZ=64)
C     DATA IWU/64/,IRU/64/,IWZ/64/
      IST=0
      LIM=10+(LBSIZE+IWZ-1)/IWZ
      IF(LIM.LE.NBDIM) GO TO 10
      PRINT 1001,LIM,NBDIM
 1001 FORMAT(' LOPEN - BUFFER DIMENSION TOO SMALL , LIMIT, DIMENSION ',
     2 2I6)
      IST=2
      RETURN
   10 NB(1)=IUN
      NB(2)=NBDIM-10
      NB(3)=LBSIZE
      NB(4)=LRSIZE
      NB(5)=MODE
      NB(6)=0
      IF(NRW.EQ.2) NB(6)=NB(3)
      NB(7)=0
      NB(8)=0
      NB(9)=1
      IF(NRW.EQ.2) NB(9)=2
      NB(10)=(NB(4)+IWZ-1)/IWZ
      RETURN
C
      ENTRY LCLOSE(NB,IST)
      IST=0
      IF(NB(9).EQ.1) GO TO 12
      IF(NB(9).NE.2) GO TO 90
      IF(NB(7).LE.0) GO TO 12
      NWU=(NB(7)+IWU-1)/IWU
      CALL WRTAPE(NB(1),NB(5),0,NB(11),NWU)
      CALL IOWAIT(NB(1),KST,KWDS)
      IST=KST
   12 NB(9)=0
      RETURN
C
      ENTRY  LREAD(NB,IB,IST)
      IST=0
      IF(NB(9).NE.1) GO TO 90
      IF(NB(7)+NB(4) .LE. NB(6)) GO TO 18
      CALL RDTAPE(NB(1),NB(5),0,NB(11),NB(2))
      CALL IOWAIT(NB(1),JST,IWDS)
      IF(JST.EQ.0) GO TO 15
      IST=JST
      IF(JST.NE.2) RETURN
   15 CONTINUE
      NB(6)=IRU*IWDS
      NB(7)=0
      NB(8)=NB(8)+1
   18 CONTINUE
      CALL GBYTES(NB(11),IB,NB(7),IWZ,0,NB(10))
      NB(7)=NB(7)+NB(4)
      RETURN
C
      ENTRY LWRITE(NB,IB,IST)
      IST=0
      IF(NB(9).NE.2) GO TO 90
      IF((NB(7)+ NB(4)) .LE. NB(6)) GO TO 30
      NWU=(NB(7)+IWU-1)/IWU
      CALL WRTAPE(NB(1),NB(5),0,NB(11),NWU)
      CALL IOWAIT(NB(1),KST,IWDS)
      NB(7)=0
      NB(8)=NB(8)+1
      IF(KST .EQ. 0) GO TO 30
      PRINT 1002,NB(1),NB(8),KST,IWDS
 1002 FORMAT ('0LWRITE - ERROR ,UNIT,BLOCK,STATUS,LTH -',
     2 I2,I8,I3,I6)
      GO TO 90
   30 CONTINUE
      CALL SBYTES(NB(11),IB,NB(7),IWZ,0,NB(10))
      NB(7)=NB(7)+NB(4)
      RETURN
   90 IST=2
      RETURN
      END
